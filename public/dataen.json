[
  {
    "collectionId": "q35la6guqbbdfg2",
    "collectionName": "projekt",
    "created": "2023-02-18 17:25:25.836Z",
    "description": "This project is a ChatGPT clone with Google user authentication and OpenAI API integration. The application offers a responsive design, real-time conversations, customizability, and a focus on security and privacy. This ensures a smooth and engaging user experience for authorized users to interact with the AI model.",
    "domain": "https://openai-chat-sigma.vercel.app/",
    "github": "https://github.com/Rikard-Johansson97/openai-chat",
    "id": "q35la6guqbbdfg2",
    "images": [
      {
        "largeURL": "https://i.imgur.com/pgKzB1i.png",
        "thumbnailURL": "https://i.imgur.com/pgKzB1i.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/nMaQ15H.png",
        "thumbnailURL": "https://i.imgur.com/nMaQ15H.png",
        "width": 960,
        "height": 930,
        "display": "Tablet"
      },
      {
        "largeURL": "https://i.imgur.com/aJZ1NcF.pngg",
        "thumbnailURL": "https://i.imgur.com/aJZ1NcF.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      }
    ],
    "name": "ChatGPT",
    "poster": "https://i.imgur.com/5Dhv0WS.jpg",
    "tools": [
      "Next.js",
      "TypeScript",
      "NextAuth.js",
      "Firebase v9",
      "OpenAI API",
      "React Toaster"
    ],
    "updated": "2023-02-18 17:31:07.253Z",
    "expand": {}
  },
  {
    "collectionId": "q35la6guqbbdfg2",
    "collectionName": "projekt",
    "created": "2023-02-18 17:25:25.836Z",
    "description": "I have created an e-commerce site using a variety of tools and systems to provide a seamless user experience. A Content Management System (CMS) was utilized to manage the content on the site, including all products, prices, images, and descriptions. With the help of Redux Toolkit, I implemented functionality that allows visitors to add products to their shopping cart and make purchases in a smooth manner. Additionally, I used NextAuth.js to handle authentication and login, and Sanity v3 to manage the content on the site. All of this was built on Next.js, a framework for building React-based web applications, and TypeScript, which adds typing and structure to the JavaScript code.",
    "domain": "",
    "github": "https://github.com/Rikard-Johansson97/apple-e-commerce-cms",
    "id": "q35la6guqbbdfg2",
    "images": [
      {
        "largeURL": "https://i.imgur.com/ZOzyDnT.png",
        "thumbnailURL": "https://i.imgur.com/ZOzyDnT.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/uhYH5O3.png",
        "thumbnailURL": "https://i.imgur.com/uhYH5O3.png",
        "width": 960,
        "height": 930,
        "display": "Tablet"
      },
      {
        "largeURL": "https://i.imgur.com/J4WQqt0.png",
        "thumbnailURL": "https://i.imgur.com/J4WQqt0.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      }
    ],
    "name": "Apple Store",
    "poster": "https://i.imgur.com/5Dhv0WS.jpg",
    "tools": [
      "Next.js",
      "CMS",
      "NextAuth.js",
      "Sanity v3",
      "Redux Toolkit",
      "TypeScript"
    ],
    "updated": "2023-02-18 17:31:07.253Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw321",
    "collectionName": "projects",
    "created": "2023-02-18 17:25:25.836Z",
    "description": "This project is a modern web application built with Next.js, TypeScript, Firebase, Chakra UI, and Redux. It offers users a fast and responsive experience, while leveraging real-time data storage and user authentication. With a focus on predictable state management and sleek design, users can post content, interact with others, and more. The unique combination of these technologies creates an efficient and powerful web application that prioritizes modern web development practices.",
    "domain": "https://reddit-clone-next-firebase-chakra-git-main-rikard-johansson97.vercel.app/",
    "github": "https://github.com/Rikard-Johansson97/Reddit-clone-Next-Firebase-Chakra",
    "id": "q35la6guqbv0asd",
    "images": [
      {
        "largeURL": "https://i.imgur.com/LMG9uBL.png",
        "thumbnailURL": "https://i.imgur.com/LMG9uBL.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/0noGysS.png",
        "thumbnailURL": "https://i.imgur.com/0noGysS.png",
        "width": 960,
        "height": 930,
        "display": "Tablet"
      },
      {
        "largeURL": "https://i.imgur.com/VbRfBRy.png",
        "thumbnailURL": "https://i.imgur.com/VbRfBRy.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      }
    ],
    "name": "Reddit Clone",
    "poster": "https://i.imgur.com/9iyuaOg.jpg",
    "tools": ["Next.js", "TypeScript", "Firebase", "Chakra UI", "Redux"],
    "updated": "2023-02-18 17:31:07.253Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw9aq",
    "collectionName": "projects",
    "created": "2023-02-14 15:44:35.209Z",
    "description": "I have created a super-fast and smooth cinema ticket booking app using the Next.js framework for lightning-fast loading and Tailwind CSS for a sleek and responsive design. To store and manage ticket information, I use the powerful NoSQL database MongoDB. Redux ensures data is smoothly shared between components, and for payments, I have chosen the user-friendly Klarna API. Finally, I use TypeScript to avoid bugs and errors in the code.",
    "domain": "https://netflix-cinema.vercel.app/",
    "github": "https://github.com/Rikard-Johansson97/netflix-Cinema",
    "id": "wce7rz6znv07vm5",
    "images": [
      {
        "largeURL": "https://i.imgur.com/34CZTXx.png",
        "thumbnailURL": "https://i.imgur.com/34CZTXx.png",
        "width": 1920,
        "height": 900,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/EhJGP9R.png",
        "thumbnailURL": "https://i.imgur.com/EhJGP9R.png",
        "width": 1920,
        "height": 900,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/ERq9DSi.png",
        "thumbnailURL": "https://i.imgur.com/ERq9DSi.png",
        "width": 488,
        "height": 900,
        "display": "Mobile"
      },
      {
        "largeURL": "https://i.imgur.com/pkOR3L6.png",
        "thumbnailURL": "https://i.imgur.com/pkOR3L6.png",
        "width": 488,
        "height": 900,
        "display": "Mobile"
      }
    ],
    "name": "Netflix Cinema",
    "poster": "https://i.imgur.com/NzDG5aY.jpg",
    "tools": [
      "TypeScript",
      "Next.js",
      "Tailwind",
      "MongoDB",
      "Redux",
      "Klarna API",
      "Youtube API"
    ],
    "updated": "2023-02-17 19:39:54.369Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw9aq",
    "collectionName": "projects",
    "created": "2023-02-14 16:35:42.984Z",
    "description": "To create my seamless Spotify clone, I used a variety of technical tools. React Router allowed for smooth navigation between different parts of the application. Using React-redux and redux-toolkit, I created a centralized data store to fetch data from the Spotify API via a Node.js server. TypeScript ensured the code was robust and type-safe, reducing the risk of bugs and errors. Material UI was used for styling, offering pre-made components and an easy way to create a consistent design. Unfortunately, the Spotify API only allows access from the administrator's IP address, so a working link is unavailable. Nevertheless, this should give an idea of the techniques required to build a modern Spotify clone.",
    "domain": "",
    "github": "https://github.com/Rikard-Johansson97/spotify-clone",
    "id": "f3eag4g0m265jfc",
    "images": [
      {
        "largeURL": "https://i.imgur.com/LhgFZyB.png",
        "thumbnailURL": "https://i.imgur.com/LhgFZyB.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/jbegUAd.png",
        "thumbnailURL": "https://i.imgur.com/jbegUAd.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/CKm2WN0.png",
        "thumbnailURL": "https://i.imgur.com/CKm2WN0.png",
        "width": 930,
        "height": 490,
        "display": "Mobile"
      },
      {
        "largeURL": "https://i.imgur.com/MPg47Cj.png",
        "thumbnailURL": "https://i.imgur.com/MPg47Cj.png",
        "width": 930,
        "height": 490,
        "display": "Mobile"
      }
    ],
    "name": "Spotify Clone",
    "poster": "https://i.imgur.com/sYxN5ok.jpg",
    "tools": ["React", "TypeScript", "Redux", "Spotify API", "Material UI"],
    "updated": "2023-02-19 13:48:23.112Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw9aq",
    "collectionName": "projects",
    "created": "2023-02-14 18:00:31.142Z",
    "description": "I used JavaScript, React, Sass, and Mongoose to create a dynamic and user-friendly Airbnb clone. With the help of Express, my application can handle large amounts of data and traffic. The result is a seamless user experience that can be easily customized to fit the needs of my users.",
    "domain": "https://airbnb-jet-nine.vercel.app/",
    "github": "https://github.com/Rikard-Johansson97/airbnb",
    "id": "leuhc1meoclmuvn",
    "images": [
      {
        "largeURL": "https://i.imgur.com/YgabpyW.png",
        "thumbnailURL": "https://i.imgur.com/YgabpyW.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/lMR5joM.png",
        "thumbnailURL": "https://i.imgur.com/lMR5joM.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/sKD7nv3.png",
        "thumbnailURL": "https://i.imgur.com/sKD7nv3.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      },
      {
        "largeURL": "https://i.imgur.com/9mxNWNs.png",
        "thumbnailURL": "https://i.imgur.com/9mxNWNs.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      }
    ],
    "name": "Airbnb Clone",
    "poster": "https://i.imgur.com/Us36Xjv.jpg",
    "tools": ["JavaScript", "React", "Sass", "Mongoose", "Express"],
    "updated": "2023-02-17 19:28:47.892Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw9aq",
    "collectionName": "projects",
    "created": "2023-02-14 18:35:45.273Z",
    "description": "I have created an HTML page that displays a list of items, where each item has a unique identifier created with CSS. To sort the list, I have used four different sorting algorithms: bubble sort, merge sort, quicksort, and selection sort. By integrating these sorting algorithms into my JavaScript code and allowing the user to choose which algorithm to use, I can show how they affect sorting time. The algorithms vary in complexity and speed, with bubble sort and selection sort being simple but slow options, and merge sort and quicksort being fast options for larger lists.",
    "domain": "https://resonant-sherbet-9c964f.netlify.app/",
    "github": "https://github.com/Rikard-Johansson97/sortVisualizer",
    "id": "rec8welcvcsdp9k",
    "images": [],
    "name": "Sorting Algorithm",
    "poster": "https://i.imgur.com/5xfe138.jpg",
    "tools": ["JavaScript", "HTML", "CSS"],
    "updated": "2023-02-18 11:11:03.410Z",
    "expand": {}
  },
  {
    "collectionId": "31dklwqbl5dw9aq",
    "collectionName": "projects",
    "created": "2023-02-18 17:25:25.836Z",
    "description": "Jag skapade en enkel och flexibel Kanban-tavla för att visualisera arbetsflöden och göra dem mer effektiva. Jag använde React, TypeScript, Context Provider och Drag and Drop. Dessa tekniker möjliggjorde interaktivitet och användarvänlighet samt möjligheten att lägga till och redigera kort och listor. Slutresultatet var en kraftfull och anpassningsbar app som hjälpte mig att organisera mitt arbete på ett effektivt sätt.",
    "domain": "https://kanban-board-blond.vercel.app/",
    "github": "https://github.com/Rikard-Johansson97/kanban-board",
    "id": "q35la6guqbv0vwu",
    "images": [
      {
        "largeURL": "https://i.imgur.com/dIpnWsy.png",
        "thumbnailURL": "https://i.imgur.com/dIpnWsy.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/KL2UFH6.png",
        "thumbnailURL": "https://i.imgur.com/KL2UFH6.png",
        "width": 1920,
        "height": 930,
        "display": "Desktop"
      },
      {
        "largeURL": "https://i.imgur.com/imcNOdl.png",
        "thumbnailURL": "https://i.imgur.com/imcNOdl.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      },
      {
        "largeURL": "https://i.imgur.com/7pWkLmk.png",
        "thumbnailURL": "https://i.imgur.com/7pWkLmk.png",
        "width": 490,
        "height": 930,
        "display": "Mobile"
      }
    ],
    "name": "Kanban Board",
    "poster": "https://i.imgur.com/PoItgpb.jpg",
    "tools": ["React", "TypeScript", "Context Provider", "Drag and Drop"],
    "updated": "2023-02-18 17:31:07.253Z",
    "expand": {}
  }
]
